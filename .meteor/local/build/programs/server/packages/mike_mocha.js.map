{"version":3,"sources":["meteor://ðŸ’»app/packages/mike_mocha/reporter.js","meteor://ðŸ’»app/packages/mike_mocha/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mG;;;;;;;;;;;;;;;;;;ACzoG","file":"/packages/mike_mocha.js","sourcesContent":["MochaWeb = this.MochaWeb = {};\n\nif (Meteor.isServer)\n  var Base = Npm.require(\"mocha/lib/reporters\").Base;\nelse\n  Base = Mocha.reporters.Base\n\nfunction getAncestors(testObject, ancestors){\n  if (!ancestors)\n    ancestors = []\n  if (testObject.parent && testObject.parent.title !== \"\"){\n    ancestors.push(testObject.parent.title)\n    return getAncestors(testObject.parent, ancestors);\n  }\n  else{\n    return ancestors;\n  }\n};\n\nMochaWeb.MeteorCollectionTestReporter = function(runner){\n  Base.call(this, runner);\n  var self = this;\n\n  function saveTestResult(test){\n    if (test.state === \"failed\"){\n      console.log(test.err.message);\n      console.log(test.err.stack);\n    }\n\n    // console.log(\"SAVE TEST RESULT\", test);\n\n    var ancestors = getAncestors(test);\n    var result = {\n      id: \"mocha:\" + ancestors.join(\":\") + \":\" + test.title,\n      async: !!test.async,\n      framework: \"mocha\",\n      name: test.title,\n      pending: test.pending,\n      result: test.state,\n      duration: test.duration,\n      timeOut: test._timeout,\n      timedOut: test.timedOut,\n      ancestors: ancestors,\n      isClient: Meteor.isClient,\n      isServer: Meteor.isServer,\n      timestamp: new Date()\n    };\n    if (typeof test.state === \"undefined\" && test.pending === true) {\n      result.result = \"pending\";\n    }\n    if (test.err){\n      result.failureMessage = test.err.message;\n      result.failureStackTrace = test.err.stack;\n    }\n    // console.log(\"POSTING RESULT\", result);\n\n    ddpParentConnection.call(\"velocity/reports/submit\", result, function(error, result){\n      if (error){\n        console.error(\"ERROR WRITING TEST\", error);\n      }\n    });\n  }\n\n  runner.on(\"start\", Meteor.bindEnvironment(\n    function(){\n      //TODO tell testRunner that mocha tests have started\n    },\n    function(err){\n      throw err;\n    }\n  ));\n\n  [\"pass\", \"fail\", \"pending\"].forEach(function(testEvent){\n    runner.on(testEvent, Meteor.bindEnvironment(\n      function(test){\n        saveTestResult(test);\n      },\n      function(err){\n        throw err;\n      }\n    ));\n  });\n\n  runner.on('end', Meteor.bindEnvironment(function(){\n    //TODO tell testRunner all mocha web tests have finished\n  }, function(err){\n    throw err;\n  }));\n};\n","// Do not run tests if Velocity is not enabled\nif (process.env.VELOCITY === \"0\") {\n  return;\n}\n\n//register the testing framework if this is the main app (not a mirror)\nif (!process.env.IS_MIRROR){\n  Velocity.registerTestingFramework(\"mocha\", {\n    regex: '^tests/mocha/.*$',\n    sampleTestGenerator: function(){\n      return [\n        { path: \"mocha/client/sampleClientTest.js\",\n          contents: Assets.getText(\"sample-tests/client.js\")\n        },\n        { path: \"mocha/server/sampleServerTest.js\",\n          contents: Assets.getText(\"sample-tests/server.js\")}\n      ];\n    }\n  });\n}\n\nvar clientTestsComplete = false;\nvar serverTestsComplete = false;\n\nvar Mocha = Npm.require(\"mocha\");\nvar childProcess = Npm.require('child_process');\nvar path = Npm.require('path');\nvar mkdirp = Npm.require(\"mkdirp\");\n\nddpParentConnection = null;\nvar parentUrl = null;\n\nMeteor.startup(function(){\n  if (process.env.IS_MIRROR) {\n    console.log(\"MOCHA MIRROR LISTENING AT\", process.env.ROOT_URL);\n    parentUrl = process.env.PARENT_URL;\n    ddpParentConnection = DDP.connect(parentUrl);\n\n    runServerTests = Meteor.bindEnvironment(function() {\n      console.log(\"Running mocha server tests\");\n      mocha.run(Meteor.bindEnvironment(function(err){\n        if (err){\n          console.log(\"Error running server tests\", err);\n        }\n        markTestsComplete();\n      }));\n    });\n  } else {\n    mirrorPort = process.env.MOCHA_MIRROR_PORT;\n    opt = {\n      framework: 'mocha',\n      testsPath: \"mocha\",\n      rootUrlPath: '?mocha=true',\n    }\n    if(mirrorPort) {\n      opt['port'] = parseInt(mirrorPort);\n    }\n\n    Meteor.call(\"velocity/mirrors/request\", opt, function(err, msg){\n      if (err){\n        console.log(\"error requesting mirror\", err);\n      }\n    });\n  }\n});\n\nvar markTestsComplete = function(){\n  ddpParentConnection.call(\"velocity/reports/completed\", {framework: \"mocha\"}, function(err){\n    if (err){\n      console.error(\"error calling testsComplete function\", err);\n    }\n  });\n};\n\nMeteor.methods({\n  \"mirrorInfo\": function(){\n    return {\n      isMirror: process.env.IS_MIRROR,\n      parentUrl: process.env.PARENT_URL\n    };\n  },\n  \"clientTestsComplete\": function(){\n    runServerTests();\n  }\n});\n\n//if not a mirror don't do anything\nMochaWeb.testOnly = function(callback){\n  // console.log(\"NO OP\", mirror.isMirror);\n};\n\nfunction setupMocha(){\n  if (! process.env.IS_MIRROR)\n    return;\n\n  MochaWeb.testOnly = function(callback){\n    callback();\n  }\n\n  global.chai = Package['practicalmeteor:chai'].chai;\n  global.mocha = new Mocha({ui: \"bdd\", reporter: MochaWeb.MeteorCollectionTestReporter});\n  Package['mike:mocha-core'].setupGlobals(mocha);\n}\nsetupMocha();\n"]}