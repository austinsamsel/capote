{"version":3,"sources":["meteor://ðŸ’»app/packages/sanjo_meteor-files-helpers/packages/sanjo_meteor-files-helpers.js"],"names":[],"mappingsfile":"/packages/sanjo_meteor-files-helpers.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/sanjo:meteor-files-helpers/lib/meteor/files.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**                                                                                                                   // 1\n * Copied from Meteor tools/files.js.                                                                                 // 2\n *                                                                                                                    // 3\n * Includes:                                                                                                          // 4\n * - Helper to find the app root path                                                                                 // 5\n */                                                                                                                   // 6\n                                                                                                                      // 7\nvar path = Npm.require('path');                                                                                       // 8\nvar fs = Npm.require('fs');                                                                                           // 9\n                                                                                                                      // 10\n// given a predicate function and a starting path, traverse upwards                                                   // 11\n// from the path until we find a path that satisfies the predicate.                                                   // 12\n//                                                                                                                    // 13\n// returns either the path to the lowest level directory that passed                                                  // 14\n// the test or null for none found. if starting path isn't given, use                                                 // 15\n// cwd.                                                                                                               // 16\nfindUpwards = function (predicate, startPath) {                                                                       // 17\n  var testDir = startPath || process.cwd();                                                                           // 18\n  while (testDir) {                                                                                                   // 19\n    if (predicate(testDir)) {                                                                                         // 20\n      break;                                                                                                          // 21\n    }                                                                                                                 // 22\n    var newDir = path.dirname(testDir);                                                                               // 23\n    if (newDir === testDir) {                                                                                         // 24\n      testDir = null;                                                                                                 // 25\n    } else {                                                                                                          // 26\n      testDir = newDir;                                                                                               // 27\n    }                                                                                                                 // 28\n  }                                                                                                                   // 29\n  if (!testDir)                                                                                                       // 30\n    return null;                                                                                                      // 31\n                                                                                                                      // 32\n  return testDir;                                                                                                     // 33\n};                                                                                                                    // 34\n                                                                                                                      // 35\n// Determine if 'filepath' (a path, or omit for cwd) is within an app                                                 // 36\n// directory. If so, return the top-level app directory.                                                              // 37\nfindAppDir = function (filepath) {                                                                                    // 38\n  var isAppDir = function (filepath) {                                                                                // 39\n    // XXX once we are done with the transition to engine, this should                                                // 40\n    // change to: `return fs.existsSync(path.join(filepath, '.meteor',                                                // 41\n    // 'release'))`                                                                                                   // 42\n                                                                                                                      // 43\n    // .meteor/packages can be a directory, if .meteor is a warehouse                                                 // 44\n    // directory.  since installing meteor initializes a warehouse at                                                 // 45\n    // $HOME/.meteor, we want to make sure your home directory (and all                                               // 46\n    // subdirectories therein) don't count as being within a meteor app.                                              // 47\n    try { // use try/catch to avoid the additional syscall to fs.existsSync                                           // 48\n      return fs.statSync(path.join(filepath, '.meteor', 'packages')).isFile();                                        // 49\n    } catch (e) {                                                                                                     // 50\n      return false;                                                                                                   // 51\n    }                                                                                                                 // 52\n  };                                                                                                                  // 53\n                                                                                                                      // 54\n  return findUpwards(isAppDir, filepath);                                                                             // 55\n};                                                                                                                    // 56\n                                                                                                                      // 57\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/sanjo:meteor-files-helpers/meteor_files_helpers.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar path = Npm.require('path')                                                                                        // 1\nvar fs = Npm.require('fs')                                                                                            // 2\nvar readFile = Meteor.wrapAsync(fs.readFile, fs)                                                                      // 3\nvar exists = Meteor.wrapAsync(function (path, callback) {                                                             // 4\n  fs.exists(path, function (result) {                                                                                 // 5\n    callback(null, result)                                                                                            // 6\n  })                                                                                                                  // 7\n})                                                                                                                    // 8\n                                                                                                                      // 9\nMeteorFilesHelpers = {                                                                                                // 10\n  getAppPath: function () {                                                                                           // 11\n    var appPath = findAppDir();                                                                                       // 12\n    return appPath ? path.resolve(appPath) : null;                                                                    // 13\n  },                                                                                                                  // 14\n                                                                                                                      // 15\n  getMeteorToolPath: function () {                                                                                    // 16\n    return this._findMeteorToolDir(process.execPath);                                                                 // 17\n  },                                                                                                                  // 18\n                                                                                                                      // 19\n  _findMeteorToolDir: function (filepath) {                                                                           // 20\n    return findUpwards(this._isMeteorToolDir.bind(this), filepath);                                                   // 21\n  },                                                                                                                  // 22\n                                                                                                                      // 23\n  _isMeteorToolDir: function (filepath) {                                                                             // 24\n    try { // use try/catch to avoid the additional syscall to fs.existsSync                                           // 25\n      return fs.statSync(path.join(filepath, 'meteor')).isFile();                                                     // 26\n    } catch (e) {                                                                                                     // 27\n      return false;                                                                                                   // 28\n    }                                                                                                                 // 29\n  },                                                                                                                  // 30\n                                                                                                                      // 31\n  getMeteorInstallationPath: function () {                                                                            // 32\n    var meteorPath                                                                                                    // 33\n    if (isWindows()) {                                                                                                // 34\n      meteorPath = process.env.METEOR_INSTALLATION                                                                    // 35\n      if (meteorPath[meteorPath.length - 1] === '\\\\') {                                                               // 36\n        meteorPath = meteorPath.substr(0, meteorPath.length - 1)                                                      // 37\n      }                                                                                                               // 38\n                                                                                                                      // 39\n    } else {                                                                                                          // 40\n      meteorPath = path.resolve(MeteorFilesHelpers.getMeteorToolPath(), '../../../..')                                // 41\n    }                                                                                                                 // 42\n                                                                                                                      // 43\n    return meteorPath                                                                                                 // 44\n  },                                                                                                                  // 45\n                                                                                                                      // 46\n  getNodeModulePath: function (meteorPackageName, nodeModuleName) {                                                   // 47\n    var localIsopackPath = path.join(                                                                                 // 48\n      MeteorFilesHelpers.getAppPath(),                                                                                // 49\n      '.meteor', 'local', 'isopacks',                                                                                 // 50\n      getFilesystemMeteorPackageName(meteorPackageName)                                                               // 51\n    )                                                                                                                 // 52\n    if (exists(localIsopackPath)) {                                                                                   // 53\n      return path.join(localIsopackPath, 'npm', 'node_modules', nodeModuleName)                                       // 54\n    } else {                                                                                                          // 55\n      if (isWindows()) {                                                                                              // 56\n        return path.join(                                                                                             // 57\n          MeteorFilesHelpers.getMeteorInstallationPath(),                                                             // 58\n          'packages',                                                                                                 // 59\n          getFilesystemMeteorPackageName(meteorPackageName), MeteorFilesHelpers.getPackageVersion(meteorPackageName), // 60\n          'npm', 'node_modules', nodeModuleName                                                                       // 61\n        )                                                                                                             // 62\n      } else {                                                                                                        // 63\n        return path.join(                                                                                             // 64\n          MeteorFilesHelpers.getAppPath(),                                                                            // 65\n          '.meteor', 'local', 'build', 'programs', 'server',                                                          // 66\n          'npm', getFilesystemMeteorPackageName(meteorPackageName),                                                   // 67\n          'node_modules', nodeModuleName                                                                              // 68\n        )                                                                                                             // 69\n      }                                                                                                               // 70\n    }                                                                                                                 // 71\n  },                                                                                                                  // 72\n                                                                                                                      // 73\n  getPackageVersions: _.memoize(function () {                                                                         // 74\n    var versionsFilePath = path.join(                                                                                 // 75\n      MeteorFilesHelpers.getAppPath(), '.meteor', 'versions'                                                          // 76\n    )                                                                                                                 // 77\n    var versionsContent = readFile(versionsFilePath, {encoding: 'utf8'})                                              // 78\n    var versionsHash = {}                                                                                             // 79\n    versionsContent.split(/\\r\\n|\\r|\\n/).forEach(function (packageConstraint) {                                        // 80\n      var parts = packageConstraint.split('@')                                                                        // 81\n      var packageName = parts[0]                                                                                      // 82\n      var packageVersion = parts[1]                                                                                   // 83\n      versionsHash[packageName] = packageVersion                                                                      // 84\n    })                                                                                                                // 85\n                                                                                                                      // 86\n    return versionsHash                                                                                               // 87\n  }),                                                                                                                 // 88\n                                                                                                                      // 89\n  getPackageVersion: function (packageName) {                                                                         // 90\n    var packageVersions = MeteorFilesHelpers.getPackageVersions()                                                     // 91\n                                                                                                                      // 92\n    return packageVersions[packageName]                                                                               // 93\n  },                                                                                                                  // 94\n                                                                                                                      // 95\n  isPackageInstalled: function (meteorPackageName, meteorPackageVersion) {                                            // 96\n    var packagePath = path.join(                                                                                      // 97\n      MeteorFilesHelpers.getMeteorInstallationPath(),                                                                 // 98\n      'packages',                                                                                                     // 99\n      getFilesystemMeteorPackageName(meteorPackageName)                                                               // 100\n    )                                                                                                                 // 101\n                                                                                                                      // 102\n    if (meteorPackageVersion) {                                                                                       // 103\n      packagePath = path.join(packagePath, meteorPackageVersion)                                                      // 104\n    }                                                                                                                 // 105\n                                                                                                                      // 106\n    return exists(packagePath)                                                                                        // 107\n  }                                                                                                                   // 108\n}                                                                                                                     // 109\n                                                                                                                      // 110\nfunction isWindows() {                                                                                                // 111\n  return process.platform === 'win32'                                                                                 // 112\n}                                                                                                                     // 113\n                                                                                                                      // 114\nfunction getFilesystemMeteorPackageName(meteorPackageName) {                                                          // 115\n  var meteorVersion = MeteorVersion.getSemanticVersion()                                                              // 116\n  return (meteorVersion && PackageVersion.lessThan(meteorVersion, '1.0.4')) ?                                         // 117\n    meteorPackageName :                                                                                               // 118\n    meteorPackageName.replace(':', '_')                                                                               // 119\n}                                                                                                                     // 120\n                                                                                                                      // 121\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}