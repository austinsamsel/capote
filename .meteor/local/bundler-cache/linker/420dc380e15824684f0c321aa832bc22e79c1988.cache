[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\nvar chai = Package['practicalmeteor:chai'].chai;\nvar assert = Package['practicalmeteor:chai'].assert;\nvar expect = Package['practicalmeteor:chai'].expect;\nvar should = Package['practicalmeteor:chai'].should;\nvar loglevel = Package['practicalmeteor:loglevel'].loglevel;\nvar ObjectLogger = Package['practicalmeteor:loglevel'].ObjectLogger;\n\n/* Package-scope variables */\nvar MochaWeb, ddpParentConnection, runServerTests, mirrorPort, opt;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                            //\n// packages/mike_mocha/reporter.js                                                            //\n//                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                              //\nMochaWeb = this.MochaWeb = {};                                                                // 1\n                                                                                              // 2\nif (Meteor.isServer)                                                                          // 3\n  var Base = Npm.require(\"mocha/lib/reporters\").Base;                                         // 4\nelse                                                                                          // 5\n  Base = Mocha.reporters.Base                                                                 // 6\n                                                                                              // 7\nfunction getAncestors(testObject, ancestors){                                                 // 8\n  if (!ancestors)                                                                             // 9\n    ancestors = []                                                                            // 10\n  if (testObject.parent && testObject.parent.title !== \"\"){                                   // 11\n    ancestors.push(testObject.parent.title)                                                   // 12\n    return getAncestors(testObject.parent, ancestors);                                        // 13\n  }                                                                                           // 14\n  else{                                                                                       // 15\n    return ancestors;                                                                         // 16\n  }                                                                                           // 17\n};                                                                                            // 18\n                                                                                              // 19\nMochaWeb.MeteorCollectionTestReporter = function(runner){                                     // 20\n  Base.call(this, runner);                                                                    // 21\n  var self = this;                                                                            // 22\n                                                                                              // 23\n  function saveTestResult(test){                                                              // 24\n    if (test.state === \"failed\"){                                                             // 25\n      console.log(test.err.message);                                                          // 26\n      console.log(test.err.stack);                                                            // 27\n    }                                                                                         // 28\n                                                                                              // 29\n    // console.log(\"SAVE TEST RESULT\", test);                                                 // 30\n                                                                                              // 31\n    var ancestors = getAncestors(test);                                                       // 32\n    var result = {                                                                            // 33\n      id: \"mocha:\" + ancestors.join(\":\") + \":\" + test.title,                                  // 34\n      async: !!test.async,                                                                    // 35\n      framework: \"mocha\",                                                                     // 36\n      name: test.title,                                                                       // 37\n      pending: test.pending,                                                                  // 38\n      result: test.state,                                                                     // 39\n      duration: test.duration,                                                                // 40\n      timeOut: test._timeout,                                                                 // 41\n      timedOut: test.timedOut,                                                                // 42\n      ancestors: ancestors,                                                                   // 43\n      isClient: Meteor.isClient,                                                              // 44\n      isServer: Meteor.isServer,                                                              // 45\n      timestamp: new Date()                                                                   // 46\n    };                                                                                        // 47\n    if (typeof test.state === \"undefined\" && test.pending === true) {                         // 48\n      result.result = \"pending\";                                                              // 49\n    }                                                                                         // 50\n    if (test.err){                                                                            // 51\n      result.failureMessage = test.err.message;                                               // 52\n      result.failureStackTrace = test.err.stack;                                              // 53\n    }                                                                                         // 54\n    // console.log(\"POSTING RESULT\", result);                                                 // 55\n                                                                                              // 56\n    ddpParentConnection.call(\"velocity/reports/submit\", result, function(error, result){      // 57\n      if (error){                                                                             // 58\n        console.error(\"ERROR WRITING TEST\", error);                                           // 59\n      }                                                                                       // 60\n    });                                                                                       // 61\n  }                                                                                           // 62\n                                                                                              // 63\n  runner.on(\"start\", Meteor.bindEnvironment(                                                  // 64\n    function(){                                                                               // 65\n      //TODO tell testRunner that mocha tests have started                                    // 66\n    },                                                                                        // 67\n    function(err){                                                                            // 68\n      throw err;                                                                              // 69\n    }                                                                                         // 70\n  ));                                                                                         // 71\n                                                                                              // 72\n  [\"pass\", \"fail\", \"pending\"].forEach(function(testEvent){                                    // 73\n    runner.on(testEvent, Meteor.bindEnvironment(                                              // 74\n      function(test){                                                                         // 75\n        saveTestResult(test);                                                                 // 76\n      },                                                                                      // 77\n      function(err){                                                                          // 78\n        throw err;                                                                            // 79\n      }                                                                                       // 80\n    ));                                                                                       // 81\n  });                                                                                         // 82\n                                                                                              // 83\n  runner.on('end', Meteor.bindEnvironment(function(){                                         // 84\n    //TODO tell testRunner all mocha web tests have finished                                  // 85\n  }, function(err){                                                                           // 86\n    throw err;                                                                                // 87\n  }));                                                                                        // 88\n};                                                                                            // 89\n                                                                                              // 90\n////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                            //\n// packages/mike_mocha/server.js                                                              //\n//                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                              //\n// Do not run tests if Velocity is not enabled                                                // 1\nif (process.env.VELOCITY === \"0\") {                                                           // 2\n  return;                                                                                     // 3\n}                                                                                             // 4\n                                                                                              // 5\n//register the testing framework if this is the main app (not a mirror)                       // 6\nif (!process.env.IS_MIRROR){                                                                  // 7\n  Velocity.registerTestingFramework(\"mocha\", {                                                // 8\n    regex: '^tests/mocha/.*$',                                                                // 9\n    sampleTestGenerator: function(){                                                          // 10\n      return [                                                                                // 11\n        { path: \"mocha/client/sampleClientTest.js\",                                           // 12\n          contents: Assets.getText(\"sample-tests/client.js\")                                  // 13\n        },                                                                                    // 14\n        { path: \"mocha/server/sampleServerTest.js\",                                           // 15\n          contents: Assets.getText(\"sample-tests/server.js\")}                                 // 16\n      ];                                                                                      // 17\n    }                                                                                         // 18\n  });                                                                                         // 19\n}                                                                                             // 20\n                                                                                              // 21\nvar clientTestsComplete = false;                                                              // 22\nvar serverTestsComplete = false;                                                              // 23\n                                                                                              // 24\nvar Mocha = Npm.require(\"mocha\");                                                             // 25\nvar childProcess = Npm.require('child_process');                                              // 26\nvar path = Npm.require('path');                                                               // 27\nvar mkdirp = Npm.require(\"mkdirp\");                                                           // 28\n                                                                                              // 29\nddpParentConnection = null;                                                                   // 30\nvar parentUrl = null;                                                                         // 31\n                                                                                              // 32\nMeteor.startup(function(){                                                                    // 33\n  if (process.env.IS_MIRROR) {                                                                // 34\n    console.log(\"MOCHA MIRROR LISTENING AT\", process.env.ROOT_URL);                           // 35\n    parentUrl = process.env.PARENT_URL;                                                       // 36\n    ddpParentConnection = DDP.connect(parentUrl);                                             // 37\n                                                                                              // 38\n    runServerTests = Meteor.bindEnvironment(function() {                                      // 39\n      console.log(\"Running mocha server tests\");                                              // 40\n      mocha.run(Meteor.bindEnvironment(function(err){                                         // 41\n        if (err){                                                                             // 42\n          console.log(\"Error running server tests\", err);                                     // 43\n        }                                                                                     // 44\n        markTestsComplete();                                                                  // 45\n      }));                                                                                    // 46\n    });                                                                                       // 47\n  } else {                                                                                    // 48\n    mirrorPort = process.env.MOCHA_MIRROR_PORT;                                               // 49\n    opt = {                                                                                   // 50\n      framework: 'mocha',                                                                     // 51\n      testsPath: \"mocha\",                                                                     // 52\n      rootUrlPath: '?mocha=true',                                                             // 53\n    }                                                                                         // 54\n    if(mirrorPort) {                                                                          // 55\n      opt['port'] = parseInt(mirrorPort);                                                     // 56\n    }                                                                                         // 57\n                                                                                              // 58\n    Meteor.call(\"velocity/mirrors/request\", opt, function(err, msg){                          // 59\n      if (err){                                                                               // 60\n        console.log(\"error requesting mirror\", err);                                          // 61\n      }                                                                                       // 62\n    });                                                                                       // 63\n  }                                                                                           // 64\n});                                                                                           // 65\n                                                                                              // 66\nvar markTestsComplete = function(){                                                           // 67\n  ddpParentConnection.call(\"velocity/reports/completed\", {framework: \"mocha\"}, function(err){\n    if (err){                                                                                 // 69\n      console.error(\"error calling testsComplete function\", err);                             // 70\n    }                                                                                         // 71\n  });                                                                                         // 72\n};                                                                                            // 73\n                                                                                              // 74\nMeteor.methods({                                                                              // 75\n  \"mirrorInfo\": function(){                                                                   // 76\n    return {                                                                                  // 77\n      isMirror: process.env.IS_MIRROR,                                                        // 78\n      parentUrl: process.env.PARENT_URL                                                       // 79\n    };                                                                                        // 80\n  },                                                                                          // 81\n  \"clientTestsComplete\": function(){                                                          // 82\n    runServerTests();                                                                         // 83\n  }                                                                                           // 84\n});                                                                                           // 85\n                                                                                              // 86\n//if not a mirror don't do anything                                                           // 87\nMochaWeb.testOnly = function(callback){                                                       // 88\n  // console.log(\"NO OP\", mirror.isMirror);                                                   // 89\n};                                                                                            // 90\n                                                                                              // 91\nfunction setupMocha(){                                                                        // 92\n  if (! process.env.IS_MIRROR)                                                                // 93\n    return;                                                                                   // 94\n                                                                                              // 95\n  MochaWeb.testOnly = function(callback){                                                     // 96\n    callback();                                                                               // 97\n  }                                                                                           // 98\n                                                                                              // 99\n  global.chai = Package['practicalmeteor:chai'].chai;                                         // 100\n  global.mocha = new Mocha({ui: \"bdd\", reporter: MochaWeb.MeteorCollectionTestReporter});     // 101\n  Package['mike:mocha-core'].setupGlobals(mocha);                                             // 102\n}                                                                                             // 103\nsetupMocha();                                                                                 // 104\n                                                                                              // 105\n////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['mike:mocha'] = {\n  MochaWeb: MochaWeb\n};\n\n})();\n","servePath":"/packages/mike_mocha.js","sourceMap":{"version":3,"sources":["/packages/mike_mocha/reporter.js","/packages/mike_mocha/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mG;;;;;;;;;;;;;;;;;;ACzoG","file":"/packages/mike_mocha.js","sourcesContent":["MochaWeb = this.MochaWeb = {};\n\nif (Meteor.isServer)\n  var Base = Npm.require(\"mocha/lib/reporters\").Base;\nelse\n  Base = Mocha.reporters.Base\n\nfunction getAncestors(testObject, ancestors){\n  if (!ancestors)\n    ancestors = []\n  if (testObject.parent && testObject.parent.title !== \"\"){\n    ancestors.push(testObject.parent.title)\n    return getAncestors(testObject.parent, ancestors);\n  }\n  else{\n    return ancestors;\n  }\n};\n\nMochaWeb.MeteorCollectionTestReporter = function(runner){\n  Base.call(this, runner);\n  var self = this;\n\n  function saveTestResult(test){\n    if (test.state === \"failed\"){\n      console.log(test.err.message);\n      console.log(test.err.stack);\n    }\n\n    // console.log(\"SAVE TEST RESULT\", test);\n\n    var ancestors = getAncestors(test);\n    var result = {\n      id: \"mocha:\" + ancestors.join(\":\") + \":\" + test.title,\n      async: !!test.async,\n      framework: \"mocha\",\n      name: test.title,\n      pending: test.pending,\n      result: test.state,\n      duration: test.duration,\n      timeOut: test._timeout,\n      timedOut: test.timedOut,\n      ancestors: ancestors,\n      isClient: Meteor.isClient,\n      isServer: Meteor.isServer,\n      timestamp: new Date()\n    };\n    if (typeof test.state === \"undefined\" && test.pending === true) {\n      result.result = \"pending\";\n    }\n    if (test.err){\n      result.failureMessage = test.err.message;\n      result.failureStackTrace = test.err.stack;\n    }\n    // console.log(\"POSTING RESULT\", result);\n\n    ddpParentConnection.call(\"velocity/reports/submit\", result, function(error, result){\n      if (error){\n        console.error(\"ERROR WRITING TEST\", error);\n      }\n    });\n  }\n\n  runner.on(\"start\", Meteor.bindEnvironment(\n    function(){\n      //TODO tell testRunner that mocha tests have started\n    },\n    function(err){\n      throw err;\n    }\n  ));\n\n  [\"pass\", \"fail\", \"pending\"].forEach(function(testEvent){\n    runner.on(testEvent, Meteor.bindEnvironment(\n      function(test){\n        saveTestResult(test);\n      },\n      function(err){\n        throw err;\n      }\n    ));\n  });\n\n  runner.on('end', Meteor.bindEnvironment(function(){\n    //TODO tell testRunner all mocha web tests have finished\n  }, function(err){\n    throw err;\n  }));\n};\n","// Do not run tests if Velocity is not enabled\nif (process.env.VELOCITY === \"0\") {\n  return;\n}\n\n//register the testing framework if this is the main app (not a mirror)\nif (!process.env.IS_MIRROR){\n  Velocity.registerTestingFramework(\"mocha\", {\n    regex: '^tests/mocha/.*$',\n    sampleTestGenerator: function(){\n      return [\n        { path: \"mocha/client/sampleClientTest.js\",\n          contents: Assets.getText(\"sample-tests/client.js\")\n        },\n        { path: \"mocha/server/sampleServerTest.js\",\n          contents: Assets.getText(\"sample-tests/server.js\")}\n      ];\n    }\n  });\n}\n\nvar clientTestsComplete = false;\nvar serverTestsComplete = false;\n\nvar Mocha = Npm.require(\"mocha\");\nvar childProcess = Npm.require('child_process');\nvar path = Npm.require('path');\nvar mkdirp = Npm.require(\"mkdirp\");\n\nddpParentConnection = null;\nvar parentUrl = null;\n\nMeteor.startup(function(){\n  if (process.env.IS_MIRROR) {\n    console.log(\"MOCHA MIRROR LISTENING AT\", process.env.ROOT_URL);\n    parentUrl = process.env.PARENT_URL;\n    ddpParentConnection = DDP.connect(parentUrl);\n\n    runServerTests = Meteor.bindEnvironment(function() {\n      console.log(\"Running mocha server tests\");\n      mocha.run(Meteor.bindEnvironment(function(err){\n        if (err){\n          console.log(\"Error running server tests\", err);\n        }\n        markTestsComplete();\n      }));\n    });\n  } else {\n    mirrorPort = process.env.MOCHA_MIRROR_PORT;\n    opt = {\n      framework: 'mocha',\n      testsPath: \"mocha\",\n      rootUrlPath: '?mocha=true',\n    }\n    if(mirrorPort) {\n      opt['port'] = parseInt(mirrorPort);\n    }\n\n    Meteor.call(\"velocity/mirrors/request\", opt, function(err, msg){\n      if (err){\n        console.log(\"error requesting mirror\", err);\n      }\n    });\n  }\n});\n\nvar markTestsComplete = function(){\n  ddpParentConnection.call(\"velocity/reports/completed\", {framework: \"mocha\"}, function(err){\n    if (err){\n      console.error(\"error calling testsComplete function\", err);\n    }\n  });\n};\n\nMeteor.methods({\n  \"mirrorInfo\": function(){\n    return {\n      isMirror: process.env.IS_MIRROR,\n      parentUrl: process.env.PARENT_URL\n    };\n  },\n  \"clientTestsComplete\": function(){\n    runServerTests();\n  }\n});\n\n//if not a mirror don't do anything\nMochaWeb.testOnly = function(callback){\n  // console.log(\"NO OP\", mirror.isMirror);\n};\n\nfunction setupMocha(){\n  if (! process.env.IS_MIRROR)\n    return;\n\n  MochaWeb.testOnly = function(callback){\n    callback();\n  }\n\n  global.chai = Package['practicalmeteor:chai'].chai;\n  global.mocha = new Mocha({ui: \"bdd\", reporter: MochaWeb.MeteorCollectionTestReporter});\n  Package['mike:mocha-core'].setupGlobals(mocha);\n}\nsetupMocha();\n"]}}]