{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"// A reactive version of amplify.store(). This object acts a little like the Session object, but\n// the key/value store is persisted on the client using amplify, so it survives page refresh\n// and retains its values between sessions.\n\nreamplify = {\n  deps: {},\n  store: function (key, value) {\n    var self = this;\n    if (value === null) {\n      //delete key\n      if (self.deps[key]) delete self.deps[key];\n      return amplify.store(key, null);\n    } else if (value !== undefined) {\n      //add/update\n      var previousValue = amplify.store(key);\n      if (self.deps[key] && value !== previousValue) {\n        self.deps[key].changed();\n      }\n      return amplify.store(key, value);\n    } else if (key) {\n      // get value of key\n      var result;\n      result = amplify.store(key);\n      if (!self.deps[key]) self.deps[key] = new Tracker.Dependency();\n      self.deps[key].depend();\n      return result;\n    } else {\n      //not implemented\n      throw new Error('reAmplify cannot reactively return the entire amplify store. ' + 'Use amplify.store() instead');\n    }\n  }\n};","ast":null,"map":{"version":3,"sources":["/lib/reamplify.js"],"names":[],"mappings":";;;;AAIA,SAAS,GAAG;AACV,MAAI,EAAE,EAAE;AACR,OAAK,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC3B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,KAAK,KAAK,IAAI,EAAE;;AAElB,UAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,aAAO,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACjC,MACI,IAAI,KAAK,KAAK,SAAS,EAAE;;AAE5B,UAAI,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvC,UAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,aAAa,EAAE;AAC7C,YAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;OACzB;AACD,aAAO,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KAClC,MACI,IAAI,GAAG,EAAE;;AAEZ,UAAI,MAAM,CAAC;AACX,YAAM,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,UAAU,EAAA,CAAC;AAC1C,UAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;AACxB,aAAO,MAAM,CAAC;KACf,MACI;;AAEH,YAAM,IAAI,KAAK,CAAC,+DAA+D,GAC/E,6BAA6B,CAAC,CAAC;KAChC;GACF;CACF,CAAC","file":"/lib/reamplify.js.map","sourcesContent":["// A reactive version of amplify.store(). This object acts a little like the Session object, but\n// the key/value store is persisted on the client using amplify, so it survives page refresh\n// and retains its values between sessions.\n\nreamplify = {\n  deps: {},\n  store: function (key, value) {\n    var self = this;\n    if (value === null) {\n      //delete key\n      if (self.deps[key])\n        delete self.deps[key];\n      return amplify.store(key, null);\n    }\n    else if (value !== undefined) {\n      //add/update\n      var previousValue = amplify.store(key);\n      if (self.deps[key] && value !== previousValue) {\n        self.deps[key].changed()\n      }\n      return amplify.store(key, value);\n    }\n    else if (key) {\n      // get value of key\n      var result;\n      result = amplify.store(key);\n      if (!self.deps[key])\n        self.deps[key] = new Tracker.Dependency;\n      self.deps[key].depend();\n      return result;\n    }\n    else {\n      //not implemented\n      throw new Error('reAmplify cannot reactively return the entire amplify store. ' +\n      'Use amplify.store() instead');\n    }\n  }\n};\n"]},"hash":"ee0b88e30b0ca141d12266367d58e4154405f931"}
